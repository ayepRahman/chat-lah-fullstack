# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddChannelMessageInputDto {
  channelId: ObjectId!
  text: String!
}

type BaseChannelDto {
  _id: ObjectId!
  isPublic: String!
  messages: [Message!]
  name: String!
  ownerId: String!
}

type BaseMessageDto {
  _id: ObjectId!
  createdAt: DateTime!
  text: String!
  user: BaseUserDto!
}

type BaseUserDto {
  _id: ObjectId!
  email: String!
  imgUrl: String
  username: String!
}

input CreateChannelInputDto {
  isPublic: Boolean!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type LoggedInUserDto {
  _id: ObjectId!
  accessToken: String!
  email: String!
  imgUrl: String
  username: String!
}

input LoginInputDto {
  email: String!
  password: String!
}

"""Message Schema"""
type Message {
  _id: ObjectId!
  createdAt: DateTime!
  text: String!
  user: User!
}

type Mutation {
  addChannelMessages(input: AddChannelMessageInputDto!): ResponseStatus!
  createChannel(input: CreateChannelInputDto!): ResponseStatus!
  googleLogin(googleIdToken: String!): LoggedInUserDto!
  login(input: LoginInputDto!): LoggedInUserDto!
  register(input: RegisterUserInputDto!): ResponseStatus!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PageInfoDto {
  hasNext: Boolean!
}

type PaginationChannelDto {
  _id: ObjectId!
  isPublic: String!
  messages: [Message!]
  name: String!
  ownerId: String!
  pageInfo: PageInfoDto!
}

input PaginationInputDto {
  limit: Float
  skip: Float
}

type Query {
  channel(channelId: ObjectId!, paginationInput: PaginationInputDto): PaginationChannelDto
  channels: [BaseChannelDto!]!
  currentUser: BaseUserDto!
}

input RegisterUserInputDto {
  email: String!
  password: String!
  username: String!
}

type ResponseStatus {
  result: ResponseStatusEnum!
}

"""A Status resposne of Success, Failure, Unknown Error"""
enum ResponseStatusEnum {
  FAILURE
  SUCCESS
  UNKNOWN_ERROR
}

type Subscription {
  newMessage(channelId: ObjectId!): BaseMessageDto
}

"""Some description about user"""
type User {
  _id: ObjectId!
  createdAt: DateTime!
  email: String!
  imgUrl: String
  password: String!
  username: String!
}
